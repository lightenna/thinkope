{"version":3,"sources":["webpack:///./src/features/prosemirror/components/OutlineRichMarkdownEditor.js"],"names":["OutlineRichMarkdownEditor","props","handleEditorChange","bind","state","change_timeout","focusable","view","PropTypes","object","isRequired","editorState","serialise_function","this","clearTimeout","that","setTimeout","value","updateValue","className","onClick","focus","onChange","defaultValue","Component"],"mappings":"42CAIMA,E,sQAEF,WAAYC,GAAO,a,4FAAA,UACf,cAAMA,IAEDC,mBAAqB,EAAKA,mBAAmBC,KAAxB,MAE1B,EAAKC,MAAQ,GAGb,EAAKC,eAAiB,KARP,E,yCAyCnB,WACI,MAAO,CACHC,WAAW,K,qBAInB,WACI,MAAO,CACHC,KAAMC,IAAUC,OAAOC,WACvBC,YAAaH,IAAUC,OAAOC,gB,kCAvCtC,c,gCAGA,SAAmBE,GAEY,MAAvBC,KAAKR,gBACLS,aAAaD,KAAKR,gBAGtB,IAAMU,EAAOF,KACbA,KAAKR,eAAiBW,YAAW,WAE7B,IAAMC,EAAQL,IAEdG,EAAKd,MAAMiB,YAAYD,KAVc,O,oBAc7C,WACI,OACI,yBAAKE,UAAU,qBAAqBC,QAASP,KAAKQ,OAC9C,kBAAC,IAAD,CACIC,SAAUT,KAAKX,mBACfqB,aAAcV,KAAKZ,MAAMsB,aACzBN,MAAOJ,KAAKZ,MAAMgB,c,8BArCEO,aAyDzBxB","file":"5.thinkhope.js","sourcesContent":["import React, {Component} from 'react';\nimport PropTypes from \"prop-types\";\nimport Editor from \"rich-markdown-editor\";\n\nclass OutlineRichMarkdownEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        // bind local event handlers\n        this.handleEditorChange = this.handleEditorChange.bind(this);\n        // initialise state\n        this.state = {\n            // non-text state\n        };\n        this.change_timeout = null;\n    }\n\n    componentDidMount() {\n    }\n\n    handleEditorChange(serialise_function) {\n        const time_after_last_change_to_action = 500; // ms\n        if (this.change_timeout != null) {\n            clearTimeout(this.change_timeout);\n        }\n        // create a timeout to process editor change shortly after last change in stream\n        const that = this;\n        this.change_timeout = setTimeout(() => {\n            // Prosemirror returns a function to request a serialisation of the document\n            const value = serialise_function();\n            // call Redux action to update other views\n            that.props.updateValue(value);\n        }, time_after_last_change_to_action);\n    }\n\n    render() {\n        return (\n            <div className=\"orme-editor editor\" onClick={this.focus}>\n                <Editor\n                    onChange={this.handleEditorChange}\n                    defaultValue={this.props.defaultValue}\n                    value={this.props.value}\n                />\n            </div>\n        );\n    }\n\n    static get characteristics() {\n        return {\n            focusable: true\n        };\n    }\n\n    static get propTypes() {\n        return {\n            view: PropTypes.object.isRequired,\n            editorState: PropTypes.object.isRequired,\n        };\n    }\n}\n\nexport default OutlineRichMarkdownEditor;\n"],"sourceRoot":""}
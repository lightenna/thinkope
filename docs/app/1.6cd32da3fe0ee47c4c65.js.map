{"version":3,"sources":["webpack:///./src/features/editor/components/DefaultEditor.js"],"names":["DefaultEditor","props","handleEditorChange","bind","focus","state","editorState","EditorState","createEmpty","this","editor","setState","updateEditorState","combined_editor_state","acceptSelection","getSelection","className","onClick","ref","element","onChange","placeholder","Component"],"mappings":"60CAKMA,E,sQAEF,WAAYC,GAAO,a,4FAAA,UACf,cAAMA,IAEDC,mBAAqB,EAAKA,mBAAmBC,KAAxB,MAC1B,EAAKC,MAAQ,EAAKA,MAAMD,KAAX,MAEb,EAAKE,MAAQ,CAETC,YAAaC,cAAYC,eARd,E,6CAafC,KAAKC,OAAON,U,yCAGGE,GAEfG,KAAKE,SAAS,CAAEL,gBAEhBG,KAAKR,MAAMW,kBAAkBN,K,+BAGxB,WAECO,EAAwBN,cAAYO,gBAAgBL,KAAKR,MAAMK,YAAaG,KAAKJ,MAAMC,YAAYS,gBACzG,OACI,yBAAKC,UAAU,wBAAwBC,QAASR,KAAKL,OACjD,kBAAC,SAAD,CACIc,IAAK,SAACC,GAAc,EAAKT,OAASS,GAClCb,YAAaO,EACbO,SAAUX,KAAKP,mBACfmB,YAAY,6B,8BAlCJC,aAyCbtB","file":"1.6cd32da3fe0ee47c4c65.js","sourcesContent":["import React, {Component} from 'react';\nimport {Editor, EditorState} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nimport '../styles/editorView.css';\n\nclass DefaultEditor extends Component {\n\n    constructor(props) {\n        super(props);\n        // bind local event handlers\n        this.handleEditorChange = this.handleEditorChange.bind(this);\n        this.focus = this.focus.bind(this);\n        // initialise state\n        this.state = {\n            // non-text state\n            editorState: EditorState.createEmpty()\n        };\n    }\n\n    focus() {\n        this.editor.focus();\n    }\n\n    handleEditorChange(editorState) {\n        // update local state to maintain non-text attributes (e.g. selection)\n        this.setState({ editorState })\n        // call Redux action to update other views\n        this.props.updateEditorState(editorState);\n    }\n\n    render() {\n        // combine text from props with non-text from state\n        const combined_editor_state = EditorState.acceptSelection(this.props.editorState, this.state.editorState.getSelection());\n        return (\n            <div className=\"default-editor editor\" onClick={this.focus}>\n                <Editor\n                    ref={(element) => { this.editor = element; }}\n                    editorState={combined_editor_state}\n                    onChange={this.handleEditorChange}\n                    placeholder=\"write something...\"\n                />\n            </div>\n        );\n    }\n}\n\nexport default DefaultEditor;\n"],"sourceRoot":""}